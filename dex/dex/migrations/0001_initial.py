# Generated by Django 4.1.5 on 2023-04-11 05:23

import dex.models
from django.db import migrations, models
import django.db.models.deletion
import sparks.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BuyOrder",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Whether the record is deleted or not (soft-delete)",
                    ),
                ),
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "energy",
                    dex.models.EnergyField(
                        help_text="Energy to be bought/sold in Wh",
                        verbose_name="Energy (Wh)",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "ORDER_REQ_RECEIVED"),
                            (10, "VALIDATION_PENDING"),
                            (-10, "VALIDATION_REJECTED"),
                            (20, "OPEN_PENDING"),
                            (30, "OPEN"),
                            (40, "PARTIAL"),
                            (50, "PARTIAL_COMPLETE"),
                            (60, "COMPLETED"),
                            (-20, "REJECTED"),
                        ],
                        default=0,
                        editable=False,
                        help_text="Status of the placed order",
                        verbose_name="Status",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("DOMESTIC", "DOMESTIC"),
                            ("MUNICIPAL", "MUNICIPAL"),
                            ("COMMERCIAL", "COMMERCIAL"),
                            ("INDUSTRIAL", "INDUSTRIAL"),
                            ("AGRICULTURAL", "AGRICULTURAL"),
                            ("STORAGE", "STORAGE"),
                        ],
                        help_text="Load Category",
                        max_length=255,
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Prosumer",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Whether the record is deleted or not (soft-delete)",
                    ),
                ),
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="An identifiable name of the prosumer",
                        max_length=255,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A short brief about the prosumer",
                        max_length=255,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellOrder",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Whether the record is deleted or not (soft-delete)",
                    ),
                ),
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "energy",
                    dex.models.EnergyField(
                        help_text="Energy to be bought/sold in Wh",
                        verbose_name="Energy (Wh)",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "ORDER_REQ_RECEIVED"),
                            (10, "VALIDATION_PENDING"),
                            (-10, "VALIDATION_REJECTED"),
                            (20, "OPEN_PENDING"),
                            (30, "OPEN"),
                            (40, "PARTIAL"),
                            (50, "PARTIAL_COMPLETE"),
                            (60, "COMPLETED"),
                            (-20, "REJECTED"),
                        ],
                        default=0,
                        editable=False,
                        help_text="Status of the placed order",
                        verbose_name="Status",
                    ),
                ),
                (
                    "price",
                    sparks.models.SparksField(
                        help_text="Price of the energy in SPARKS",
                        verbose_name="Price (SPARKS)",
                    ),
                ),
                (
                    "prosumer",
                    models.ForeignKey(
                        editable=False,
                        help_text="Prosumer that created the buy order",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dex.prosumer",
                        verbose_name="Buyer",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Whether the record is deleted or not (soft-delete)",
                    ),
                ),
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "price",
                    sparks.models.SparksField(
                        help_text="The average price of this trade in SPARKS",
                        verbose_name="Avg. Price (SPARKS)",
                    ),
                ),
                (
                    "transmission_losses",
                    dex.models.EnergyField(
                        help_text="Estimated energy lost in transmission between the buyer and seller",
                        verbose_name="Transmission Losses",
                    ),
                ),
                (
                    "total_energy",
                    dex.models.EnergyField(
                        help_text="Total amount of energy traded in this trade (inclusive of transmission losses).",
                        verbose_name="Total Energy",
                    ),
                ),
                (
                    "cashflow_status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "PAYMENT_PENDING"),
                            (30, "PAYMENT_RECEIVED"),
                            (60, "DISBURSEMENT_COMPLETE"),
                        ],
                        default=0,
                        editable=False,
                        help_text="Status of the payment for this trade",
                        verbose_name="Payment Status",
                    ),
                ),
                (
                    "buy",
                    models.ForeignKey(
                        help_text="The buy order of this trade.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trades",
                        to="dex.buyorder",
                        verbose_name="Buy Order",
                    ),
                ),
                (
                    "sell",
                    models.ForeignKey(
                        help_text="The sell order related to this trade",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trades",
                        to="dex.sellorder",
                        verbose_name="Sell Order",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
